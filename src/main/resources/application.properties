spring.application.name=political-chat-backend

# PostgreSQL DataSource Configuration using Environment Variables
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA (Java Persistence API) / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update # 첫 배포 시 DB 테이블 자동 생성/업데이트 (운영 안정화 후 'validate' 또는 'none' 고려)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.show-sql=true # 운영 환경에서는 보통 false 또는 주석 처리하여 SQL 로그를 줄입니다.
spring.jpa.open-in-view=false # OSIV 비활성화 권장

# JWT Settings using Environment Variable
app.jwt.secret=${JWT_SECRET} # 실제 운영 시 매우 강력하고 긴 무작위 문자열을 환경 변수로 설정
app.jwt.expiration-ms=86400000
# 토큰 만료 시간 (예: 24시간 = 24 * 60 * 60 * 1000 ms)

# 주석 처리된 Spring Security 기본 사용자 설정 (DB 사용자 사용으로 불필요)
# spring.security.user.name=testuser
# spring.security.user.password={noop}testpassword

# 운영 환경 로깅 레벨 (선택 사항, 필요에 따라 조절)
# logging.level.root=INFO
# logging.level.org.springframework.web=INFO
# logging.level.org.springframework.security=INFO # 보안 관련 문제는 DEBUG로 일시적 확인 가능
# logging.level.org.hibernate.SQL=INFO # SQL 로그는 필요시에만 DEBUG로